// Generated from /home/support-pc/Рабочий стол/техподдержка/отчеты/Копытцев А А/others/inteljidea/langA_/src/main/java/org/lexasub/langosWithoutSyntax.g4 by ANTLR 4.10.1
package org.lexasub.langosThirdTryWithoutPromise.frontend;
import org.antlr.v4.runtime.Lexer;
import org.antlr.v4.runtime.CharStream;
import org.antlr.v4.runtime.Token;
import org.antlr.v4.runtime.TokenStream;
import org.antlr.v4.runtime.*;
import org.antlr.v4.runtime.atn.*;
import org.antlr.v4.runtime.dfa.DFA;
import org.antlr.v4.runtime.misc.*;

@SuppressWarnings({"all", "warnings", "unchecked", "unused", "cast"})
public class langosWithoutSyntaxLexer extends Lexer {
	static { RuntimeMetaData.checkVersion("4.10.1", RuntimeMetaData.VERSION); }

	protected static final DFA[] _decisionToDFA;
	protected static final PredictionContextCache _sharedContextCache =
		new PredictionContextCache();
	public static final int
		T__0=1, CHAR=2, STRING=3, WS=4, IMPORT=5, BREAK=6, CLASS=7, CONTINUE=8, 
		IF=9, MAP=10, PAIRMAP=11, RETURN=12, SYNTAX=13, WHILE=14, WITH=15, QUEST=16, 
		STAR=17, PLUS=18, MINUS=19, ASSIGN=20, DOT=21, LPAREN=22, RPAREN=23, LBRACE=24, 
		RBRACE=25, LEND=26, REND=27, BAR=28, GT=29, LT=30, CIRCUMFLEX=31, DOUBLECOLON=32, 
		COLON=33, SEMI=34, COMA=35, ARROW=36, ID=37;
	public static String[] channelNames = {
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN"
	};

	public static String[] modeNames = {
		"DEFAULT_MODE"
	};

	private static String[] makeRuleNames() {
		return new String[] {
			"T__0", "NOTQUO", "ESCQUO", "STRINGBODY", "QUOTE", "LOWBAR", "CHAR", 
			"STRING", "WS", "IMPORT", "BREAK", "CLASS", "CONTINUE", "IF", "MAP", 
			"PAIRMAP", "RETURN", "SYNTAX", "WHILE", "WITH", "QUEST", "STAR", "PLUS", 
			"MINUS", "ASSIGN", "DOT", "LPAREN", "RPAREN", "LBRACE", "RBRACE", "LEND", 
			"REND", "BAR", "GT", "LT", "CIRCUMFLEX", "DOUBLECOLON", "COLON", "SEMI", 
			"COMA", "ARROW", "ID1", "ID2", "ID"
		};
	}
	public static final String[] ruleNames = makeRuleNames();

	private static String[] makeLiteralNames() {
		return new String[] {
			null, "'$'", null, null, null, "'import'", "'break'", "'class'", "'continue'", 
			"'if'", "'map'", "'pairmap'", "'return'", "'syntax'", "'while'", "'with'", 
			"'?'", "'*'", "'+'", "'-'", "'='", "'.'", "')'", "'('", "'}'", "'{'", 
			"']'", "'['", "'|'", "'>'", "'<'", "'^'", "'::'", "':'", "';'", "','", 
			"'->'"
		};
	}
	private static final String[] _LITERAL_NAMES = makeLiteralNames();
	private static String[] makeSymbolicNames() {
		return new String[] {
			null, null, "CHAR", "STRING", "WS", "IMPORT", "BREAK", "CLASS", "CONTINUE", 
			"IF", "MAP", "PAIRMAP", "RETURN", "SYNTAX", "WHILE", "WITH", "QUEST", 
			"STAR", "PLUS", "MINUS", "ASSIGN", "DOT", "LPAREN", "RPAREN", "LBRACE", 
			"RBRACE", "LEND", "REND", "BAR", "GT", "LT", "CIRCUMFLEX", "DOUBLECOLON", 
			"COLON", "SEMI", "COMA", "ARROW", "ID"
		};
	}
	private static final String[] _SYMBOLIC_NAMES = makeSymbolicNames();
	public static final Vocabulary VOCABULARY = new VocabularyImpl(_LITERAL_NAMES, _SYMBOLIC_NAMES);

	/**
	 * @deprecated Use {@link #VOCABULARY} instead.
	 */
	@Deprecated
	public static final String[] tokenNames;
	static {
		tokenNames = new String[_SYMBOLIC_NAMES.length];
		for (int i = 0; i < tokenNames.length; i++) {
			tokenNames[i] = VOCABULARY.getLiteralName(i);
			if (tokenNames[i] == null) {
				tokenNames[i] = VOCABULARY.getSymbolicName(i);
			}

			if (tokenNames[i] == null) {
				tokenNames[i] = "<INVALID>";
			}
		}
	}

	@Override
	@Deprecated
	public String[] getTokenNames() {
		return tokenNames;
	}

	@Override

	public Vocabulary getVocabulary() {
		return VOCABULARY;
	}


	public langosWithoutSyntaxLexer(CharStream input) {
		super(input);
		_interp = new LexerATNSimulator(this,_ATN,_decisionToDFA,_sharedContextCache);
	}

	@Override
	public String getGrammarFileName() { return "langosWithoutSyntax.g4"; }

	@Override
	public String[] getRuleNames() { return ruleNames; }

	@Override
	public String getSerializedATN() { return _serializedATN; }

	@Override
	public String[] getChannelNames() { return channelNames; }

	@Override
	public String[] getModeNames() { return modeNames; }

	@Override
	public ATN getATN() { return _ATN; }

	public static final String _serializedATN =
		"\u0004\u0000%\u00fe\u0006\uffff\uffff\u0002\u0000\u0007\u0000\u0002\u0001"+
		"\u0007\u0001\u0002\u0002\u0007\u0002\u0002\u0003\u0007\u0003\u0002\u0004"+
		"\u0007\u0004\u0002\u0005\u0007\u0005\u0002\u0006\u0007\u0006\u0002\u0007"+
		"\u0007\u0007\u0002\b\u0007\b\u0002\t\u0007\t\u0002\n\u0007\n\u0002\u000b"+
		"\u0007\u000b\u0002\f\u0007\f\u0002\r\u0007\r\u0002\u000e\u0007\u000e\u0002"+
		"\u000f\u0007\u000f\u0002\u0010\u0007\u0010\u0002\u0011\u0007\u0011\u0002"+
		"\u0012\u0007\u0012\u0002\u0013\u0007\u0013\u0002\u0014\u0007\u0014\u0002"+
		"\u0015\u0007\u0015\u0002\u0016\u0007\u0016\u0002\u0017\u0007\u0017\u0002"+
		"\u0018\u0007\u0018\u0002\u0019\u0007\u0019\u0002\u001a\u0007\u001a\u0002"+
		"\u001b\u0007\u001b\u0002\u001c\u0007\u001c\u0002\u001d\u0007\u001d\u0002"+
		"\u001e\u0007\u001e\u0002\u001f\u0007\u001f\u0002 \u0007 \u0002!\u0007"+
		"!\u0002\"\u0007\"\u0002#\u0007#\u0002$\u0007$\u0002%\u0007%\u0002&\u0007"+
		"&\u0002\'\u0007\'\u0002(\u0007(\u0002)\u0007)\u0002*\u0007*\u0002+\u0007"+
		"+\u0001\u0000\u0001\u0000\u0001\u0001\u0001\u0001\u0001\u0002\u0001\u0002"+
		"\u0001\u0002\u0001\u0003\u0001\u0003\u0003\u0003c\b\u0003\u0001\u0004"+
		"\u0001\u0004\u0001\u0005\u0001\u0005\u0001\u0006\u0001\u0006\u0001\u0006"+
		"\u0003\u0006l\b\u0006\u0001\u0006\u0001\u0006\u0001\u0007\u0001\u0007"+
		"\u0005\u0007r\b\u0007\n\u0007\f\u0007u\t\u0007\u0001\u0007\u0001\u0007"+
		"\u0001\b\u0001\b\u0001\b\u0001\b\u0001\t\u0001\t\u0001\t\u0001\t\u0001"+
		"\t\u0001\t\u0001\t\u0001\n\u0001\n\u0001\n\u0001\n\u0001\n\u0001\n\u0001"+
		"\u000b\u0001\u000b\u0001\u000b\u0001\u000b\u0001\u000b\u0001\u000b\u0001"+
		"\f\u0001\f\u0001\f\u0001\f\u0001\f\u0001\f\u0001\f\u0001\f\u0001\f\u0001"+
		"\r\u0001\r\u0001\r\u0001\u000e\u0001\u000e\u0001\u000e\u0001\u000e\u0001"+
		"\u000f\u0001\u000f\u0001\u000f\u0001\u000f\u0001\u000f\u0001\u000f\u0001"+
		"\u000f\u0001\u000f\u0001\u0010\u0001\u0010\u0001\u0010\u0001\u0010\u0001"+
		"\u0010\u0001\u0010\u0001\u0010\u0001\u0011\u0001\u0011\u0001\u0011\u0001"+
		"\u0011\u0001\u0011\u0001\u0011\u0001\u0011\u0001\u0012\u0001\u0012\u0001"+
		"\u0012\u0001\u0012\u0001\u0012\u0001\u0012\u0001\u0013\u0001\u0013\u0001"+
		"\u0013\u0001\u0013\u0001\u0013\u0001\u0014\u0001\u0014\u0001\u0015\u0001"+
		"\u0015\u0001\u0016\u0001\u0016\u0001\u0017\u0001\u0017\u0001\u0018\u0001"+
		"\u0018\u0001\u0019\u0001\u0019\u0001\u001a\u0001\u001a\u0001\u001b\u0001"+
		"\u001b\u0001\u001c\u0001\u001c\u0001\u001d\u0001\u001d\u0001\u001e\u0001"+
		"\u001e\u0001\u001f\u0001\u001f\u0001 \u0001 \u0001!\u0001!\u0001\"\u0001"+
		"\"\u0001#\u0001#\u0001$\u0001$\u0001$\u0001%\u0001%\u0001&\u0001&\u0001"+
		"\'\u0001\'\u0001(\u0001(\u0001(\u0001)\u0001)\u0003)\u00ef\b)\u0001*\u0001"+
		"*\u0001+\u0004+\u00f4\b+\u000b+\f+\u00f5\u0001+\u0001+\u0005+\u00fa\b"+
		"+\n+\f+\u00fd\t+\u0001s\u0000,\u0001\u0001\u0003\u0000\u0005\u0000\u0007"+
		"\u0000\t\u0000\u000b\u0000\r\u0002\u000f\u0003\u0011\u0004\u0013\u0005"+
		"\u0015\u0006\u0017\u0007\u0019\b\u001b\t\u001d\n\u001f\u000b!\f#\r%\u000e"+
		"\'\u000f)\u0010+\u0011-\u0012/\u00131\u00143\u00155\u00167\u00179\u0018"+
		";\u0019=\u001a?\u001bA\u001cC\u001dE\u001eG\u001fI K!M\"O#Q$S\u0000U\u0000"+
		"W%\u0001\u0000\u0004\u0001\u0000\'\'\u0003\u0000\t\n\r\r  \u0002\u0000"+
		"AZaz\u0001\u000009\u00fd\u0000\u0001\u0001\u0000\u0000\u0000\u0000\r\u0001"+
		"\u0000\u0000\u0000\u0000\u000f\u0001\u0000\u0000\u0000\u0000\u0011\u0001"+
		"\u0000\u0000\u0000\u0000\u0013\u0001\u0000\u0000\u0000\u0000\u0015\u0001"+
		"\u0000\u0000\u0000\u0000\u0017\u0001\u0000\u0000\u0000\u0000\u0019\u0001"+
		"\u0000\u0000\u0000\u0000\u001b\u0001\u0000\u0000\u0000\u0000\u001d\u0001"+
		"\u0000\u0000\u0000\u0000\u001f\u0001\u0000\u0000\u0000\u0000!\u0001\u0000"+
		"\u0000\u0000\u0000#\u0001\u0000\u0000\u0000\u0000%\u0001\u0000\u0000\u0000"+
		"\u0000\'\u0001\u0000\u0000\u0000\u0000)\u0001\u0000\u0000\u0000\u0000"+
		"+\u0001\u0000\u0000\u0000\u0000-\u0001\u0000\u0000\u0000\u0000/\u0001"+
		"\u0000\u0000\u0000\u00001\u0001\u0000\u0000\u0000\u00003\u0001\u0000\u0000"+
		"\u0000\u00005\u0001\u0000\u0000\u0000\u00007\u0001\u0000\u0000\u0000\u0000"+
		"9\u0001\u0000\u0000\u0000\u0000;\u0001\u0000\u0000\u0000\u0000=\u0001"+
		"\u0000\u0000\u0000\u0000?\u0001\u0000\u0000\u0000\u0000A\u0001\u0000\u0000"+
		"\u0000\u0000C\u0001\u0000\u0000\u0000\u0000E\u0001\u0000\u0000\u0000\u0000"+
		"G\u0001\u0000\u0000\u0000\u0000I\u0001\u0000\u0000\u0000\u0000K\u0001"+
		"\u0000\u0000\u0000\u0000M\u0001\u0000\u0000\u0000\u0000O\u0001\u0000\u0000"+
		"\u0000\u0000Q\u0001\u0000\u0000\u0000\u0000W\u0001\u0000\u0000\u0000\u0001"+
		"Y\u0001\u0000\u0000\u0000\u0003[\u0001\u0000\u0000\u0000\u0005]\u0001"+
		"\u0000\u0000\u0000\u0007b\u0001\u0000\u0000\u0000\td\u0001\u0000\u0000"+
		"\u0000\u000bf\u0001\u0000\u0000\u0000\rh\u0001\u0000\u0000\u0000\u000f"+
		"o\u0001\u0000\u0000\u0000\u0011x\u0001\u0000\u0000\u0000\u0013|\u0001"+
		"\u0000\u0000\u0000\u0015\u0083\u0001\u0000\u0000\u0000\u0017\u0089\u0001"+
		"\u0000\u0000\u0000\u0019\u008f\u0001\u0000\u0000\u0000\u001b\u0098\u0001"+
		"\u0000\u0000\u0000\u001d\u009b\u0001\u0000\u0000\u0000\u001f\u009f\u0001"+
		"\u0000\u0000\u0000!\u00a7\u0001\u0000\u0000\u0000#\u00ae\u0001\u0000\u0000"+
		"\u0000%\u00b5\u0001\u0000\u0000\u0000\'\u00bb\u0001\u0000\u0000\u0000"+
		")\u00c0\u0001\u0000\u0000\u0000+\u00c2\u0001\u0000\u0000\u0000-\u00c4"+
		"\u0001\u0000\u0000\u0000/\u00c6\u0001\u0000\u0000\u00001\u00c8\u0001\u0000"+
		"\u0000\u00003\u00ca\u0001\u0000\u0000\u00005\u00cc\u0001\u0000\u0000\u0000"+
		"7\u00ce\u0001\u0000\u0000\u00009\u00d0\u0001\u0000\u0000\u0000;\u00d2"+
		"\u0001\u0000\u0000\u0000=\u00d4\u0001\u0000\u0000\u0000?\u00d6\u0001\u0000"+
		"\u0000\u0000A\u00d8\u0001\u0000\u0000\u0000C\u00da\u0001\u0000\u0000\u0000"+
		"E\u00dc\u0001\u0000\u0000\u0000G\u00de\u0001\u0000\u0000\u0000I\u00e0"+
		"\u0001\u0000\u0000\u0000K\u00e3\u0001\u0000\u0000\u0000M\u00e5\u0001\u0000"+
		"\u0000\u0000O\u00e7\u0001\u0000\u0000\u0000Q\u00e9\u0001\u0000\u0000\u0000"+
		"S\u00ee\u0001\u0000\u0000\u0000U\u00f0\u0001\u0000\u0000\u0000W\u00f3"+
		"\u0001\u0000\u0000\u0000YZ\u0005$\u0000\u0000Z\u0002\u0001\u0000\u0000"+
		"\u0000[\\\b\u0000\u0000\u0000\\\u0004\u0001\u0000\u0000\u0000]^\u0005"+
		"\\\u0000\u0000^_\u0005\'\u0000\u0000_\u0006\u0001\u0000\u0000\u0000`c"+
		"\u0003\u0005\u0002\u0000ac\u0003\u0003\u0001\u0000b`\u0001\u0000\u0000"+
		"\u0000ba\u0001\u0000\u0000\u0000c\b\u0001\u0000\u0000\u0000de\u0005\'"+
		"\u0000\u0000e\n\u0001\u0000\u0000\u0000fg\u0005_\u0000\u0000g\f\u0001"+
		"\u0000\u0000\u0000hk\u0003\t\u0004\u0000il\u0003\u0003\u0001\u0000jl\u0003"+
		"\u0005\u0002\u0000ki\u0001\u0000\u0000\u0000kj\u0001\u0000\u0000\u0000"+
		"lm\u0001\u0000\u0000\u0000mn\u0003\t\u0004\u0000n\u000e\u0001\u0000\u0000"+
		"\u0000os\u0003\t\u0004\u0000pr\u0003\u0007\u0003\u0000qp\u0001\u0000\u0000"+
		"\u0000ru\u0001\u0000\u0000\u0000st\u0001\u0000\u0000\u0000sq\u0001\u0000"+
		"\u0000\u0000tv\u0001\u0000\u0000\u0000us\u0001\u0000\u0000\u0000vw\u0003"+
		"\t\u0004\u0000w\u0010\u0001\u0000\u0000\u0000xy\u0007\u0001\u0000\u0000"+
		"yz\u0001\u0000\u0000\u0000z{\u0006\b\u0000\u0000{\u0012\u0001\u0000\u0000"+
		"\u0000|}\u0005i\u0000\u0000}~\u0005m\u0000\u0000~\u007f\u0005p\u0000\u0000"+
		"\u007f\u0080\u0005o\u0000\u0000\u0080\u0081\u0005r\u0000\u0000\u0081\u0082"+
		"\u0005t\u0000\u0000\u0082\u0014\u0001\u0000\u0000\u0000\u0083\u0084\u0005"+
		"b\u0000\u0000\u0084\u0085\u0005r\u0000\u0000\u0085\u0086\u0005e\u0000"+
		"\u0000\u0086\u0087\u0005a\u0000\u0000\u0087\u0088\u0005k\u0000\u0000\u0088"+
		"\u0016\u0001\u0000\u0000\u0000\u0089\u008a\u0005c\u0000\u0000\u008a\u008b"+
		"\u0005l\u0000\u0000\u008b\u008c\u0005a\u0000\u0000\u008c\u008d\u0005s"+
		"\u0000\u0000\u008d\u008e\u0005s\u0000\u0000\u008e\u0018\u0001\u0000\u0000"+
		"\u0000\u008f\u0090\u0005c\u0000\u0000\u0090\u0091\u0005o\u0000\u0000\u0091"+
		"\u0092\u0005n\u0000\u0000\u0092\u0093\u0005t\u0000\u0000\u0093\u0094\u0005"+
		"i\u0000\u0000\u0094\u0095\u0005n\u0000\u0000\u0095\u0096\u0005u\u0000"+
		"\u0000\u0096\u0097\u0005e\u0000\u0000\u0097\u001a\u0001\u0000\u0000\u0000"+
		"\u0098\u0099\u0005i\u0000\u0000\u0099\u009a\u0005f\u0000\u0000\u009a\u001c"+
		"\u0001\u0000\u0000\u0000\u009b\u009c\u0005m\u0000\u0000\u009c\u009d\u0005"+
		"a\u0000\u0000\u009d\u009e\u0005p\u0000\u0000\u009e\u001e\u0001\u0000\u0000"+
		"\u0000\u009f\u00a0\u0005p\u0000\u0000\u00a0\u00a1\u0005a\u0000\u0000\u00a1"+
		"\u00a2\u0005i\u0000\u0000\u00a2\u00a3\u0005r\u0000\u0000\u00a3\u00a4\u0005"+
		"m\u0000\u0000\u00a4\u00a5\u0005a\u0000\u0000\u00a5\u00a6\u0005p\u0000"+
		"\u0000\u00a6 \u0001\u0000\u0000\u0000\u00a7\u00a8\u0005r\u0000\u0000\u00a8"+
		"\u00a9\u0005e\u0000\u0000\u00a9\u00aa\u0005t\u0000\u0000\u00aa\u00ab\u0005"+
		"u\u0000\u0000\u00ab\u00ac\u0005r\u0000\u0000\u00ac\u00ad\u0005n\u0000"+
		"\u0000\u00ad\"\u0001\u0000\u0000\u0000\u00ae\u00af\u0005s\u0000\u0000"+
		"\u00af\u00b0\u0005y\u0000\u0000\u00b0\u00b1\u0005n\u0000\u0000\u00b1\u00b2"+
		"\u0005t\u0000\u0000\u00b2\u00b3\u0005a\u0000\u0000\u00b3\u00b4\u0005x"+
		"\u0000\u0000\u00b4$\u0001\u0000\u0000\u0000\u00b5\u00b6\u0005w\u0000\u0000"+
		"\u00b6\u00b7\u0005h\u0000\u0000\u00b7\u00b8\u0005i\u0000\u0000\u00b8\u00b9"+
		"\u0005l\u0000\u0000\u00b9\u00ba\u0005e\u0000\u0000\u00ba&\u0001\u0000"+
		"\u0000\u0000\u00bb\u00bc\u0005w\u0000\u0000\u00bc\u00bd\u0005i\u0000\u0000"+
		"\u00bd\u00be\u0005t\u0000\u0000\u00be\u00bf\u0005h\u0000\u0000\u00bf("+
		"\u0001\u0000\u0000\u0000\u00c0\u00c1\u0005?\u0000\u0000\u00c1*\u0001\u0000"+
		"\u0000\u0000\u00c2\u00c3\u0005*\u0000\u0000\u00c3,\u0001\u0000\u0000\u0000"+
		"\u00c4\u00c5\u0005+\u0000\u0000\u00c5.\u0001\u0000\u0000\u0000\u00c6\u00c7"+
		"\u0005-\u0000\u0000\u00c70\u0001\u0000\u0000\u0000\u00c8\u00c9\u0005="+
		"\u0000\u0000\u00c92\u0001\u0000\u0000\u0000\u00ca\u00cb\u0005.\u0000\u0000"+
		"\u00cb4\u0001\u0000\u0000\u0000\u00cc\u00cd\u0005)\u0000\u0000\u00cd6"+
		"\u0001\u0000\u0000\u0000\u00ce\u00cf\u0005(\u0000\u0000\u00cf8\u0001\u0000"+
		"\u0000\u0000\u00d0\u00d1\u0005}\u0000\u0000\u00d1:\u0001\u0000\u0000\u0000"+
		"\u00d2\u00d3\u0005{\u0000\u0000\u00d3<\u0001\u0000\u0000\u0000\u00d4\u00d5"+
		"\u0005]\u0000\u0000\u00d5>\u0001\u0000\u0000\u0000\u00d6\u00d7\u0005["+
		"\u0000\u0000\u00d7@\u0001\u0000\u0000\u0000\u00d8\u00d9\u0005|\u0000\u0000"+
		"\u00d9B\u0001\u0000\u0000\u0000\u00da\u00db\u0005>\u0000\u0000\u00dbD"+
		"\u0001\u0000\u0000\u0000\u00dc\u00dd\u0005<\u0000\u0000\u00ddF\u0001\u0000"+
		"\u0000\u0000\u00de\u00df\u0005^\u0000\u0000\u00dfH\u0001\u0000\u0000\u0000"+
		"\u00e0\u00e1\u0005:\u0000\u0000\u00e1\u00e2\u0005:\u0000\u0000\u00e2J"+
		"\u0001\u0000\u0000\u0000\u00e3\u00e4\u0005:\u0000\u0000\u00e4L\u0001\u0000"+
		"\u0000\u0000\u00e5\u00e6\u0005;\u0000\u0000\u00e6N\u0001\u0000\u0000\u0000"+
		"\u00e7\u00e8\u0005,\u0000\u0000\u00e8P\u0001\u0000\u0000\u0000\u00e9\u00ea"+
		"\u0005-\u0000\u0000\u00ea\u00eb\u0005>\u0000\u0000\u00ebR\u0001\u0000"+
		"\u0000\u0000\u00ec\u00ef\u0007\u0002\u0000\u0000\u00ed\u00ef\u0003\u000b"+
		"\u0005\u0000\u00ee\u00ec\u0001\u0000\u0000\u0000\u00ee\u00ed\u0001\u0000"+
		"\u0000\u0000\u00efT\u0001\u0000\u0000\u0000\u00f0\u00f1\u0007\u0003\u0000"+
		"\u0000\u00f1V\u0001\u0000\u0000\u0000\u00f2\u00f4\u0003S)\u0000\u00f3"+
		"\u00f2\u0001\u0000\u0000\u0000\u00f4\u00f5\u0001\u0000\u0000\u0000\u00f5"+
		"\u00f3\u0001\u0000\u0000\u0000\u00f5\u00f6\u0001\u0000\u0000\u0000\u00f6"+
		"\u00fb\u0001\u0000\u0000\u0000\u00f7\u00fa\u0003S)\u0000\u00f8\u00fa\u0003"+
		"U*\u0000\u00f9\u00f7\u0001\u0000\u0000\u0000\u00f9\u00f8\u0001\u0000\u0000"+
		"\u0000\u00fa\u00fd\u0001\u0000\u0000\u0000\u00fb\u00f9\u0001\u0000\u0000"+
		"\u0000\u00fb\u00fc\u0001\u0000\u0000\u0000\u00fcX\u0001\u0000\u0000\u0000"+
		"\u00fd\u00fb\u0001\u0000\u0000\u0000\b\u0000bks\u00ee\u00f5\u00f9\u00fb"+
		"\u0001\u0006\u0000\u0000";
	public static final ATN _ATN =
		new ATNDeserializer().deserialize(_serializedATN.toCharArray());
	static {
		_decisionToDFA = new DFA[_ATN.getNumberOfDecisions()];
		for (int i = 0; i < _ATN.getNumberOfDecisions(); i++) {
			_decisionToDFA[i] = new DFA(_ATN.getDecisionState(i), i);
		}
	}
}